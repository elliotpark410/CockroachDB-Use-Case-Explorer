generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Prospect {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  contactName      String?
  email            String?
  companyName      String?
  industry         String?
  role             String?
  dataWorkloadType DataWorkload
  cloudProvider    CloudProvider
  techStack        TechStack[]
  isNewApp         Boolean?
  scalability      Boolean?
  consistency      Boolean?
  multiRegion      Boolean?
  dataLocality     Boolean?
  dataCompliance   Boolean?
  highAvailability Boolean?
  faultTolerance   Boolean?
  performance      Boolean?
  queryLatency     Int
  additionalNotes  String?
  timeline         String
  dataVolume       String?
  result           Result?
}

model CustomerStory {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  companyName        String
  industry           String
  cloudProvider      CloudProvider?
  techStack          TechStack[]
  useCase            String?
  businessChallenge  String?
  technicalChallenge String?
  businessOutcome    String?
  requiredFeatures   Features[]
}

model Result {
  id                      String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  prospectId              String          @unique @db.Uuid
  score                   Int
  helpfulFeatures         Features[]
  prospect                Prospect        @relation(fields: [prospectId], references: [id])
}

enum DataWorkload {
  TRANSACTIONAL
  ANALYTICAL
  HYBRID
  OTHER
}

enum CloudProvider {
  AWS
  GCP
  AZURE
  MULTI_CLOUD
  ON_PREMISE
  HYBRID
  NA
}

enum TechStack {
  MYSQL
  POSTGRES
  ORACLE
  SQL_SERVER
  MARIA_DB
  AURORA
  DYNAMO_DB
  SPANNER
  TERADATA
  COUCHBASE
  MONGO_DB
  IBM_DB2
  CASSANDRA
  ELASTICSEARCH
  REDIS
  KAFKA
  KUBERNETES
  DOCKER
  OTHER
  NA
}

enum Features {
  SCALABILITY
  CONSISTENCY
  MULTI_REGION
  DATA_LOCALITY
  DATA_COMPLIANCE
  HIGH_AVAILABILITY
  FAULT_TOLERANCE
  PERFORMANCE
}
